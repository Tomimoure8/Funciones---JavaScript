// Declaraci√≤n de variable para guardar el resultado de la suma
let tomi = function (a, b) {return a + b}
let resultado = alert (tomi (3,7));
let mai = function (a, b) {return a - b}
let resultadoo = alert(mai(23,1));




// CLASE 4: Funciones

// Actividades:

// Actividad de repaso: Calcular el area de un rectangulo // Crea una funci√≥n en JavaScript que calcule el √°rea de un tri√°ngulo y almacene el resultado en una variable global. La funci√≥n debe tomar dos par√°metros: la base y la altura del tri√°ngulo. Luego, llama a la funci√≥n con algunos valores de prueba y muestra el resultado almacenado en la variable global en la consola.

let areaTriangulo;

function calcularAreaTriangulo (base, altura) {
    return (base * altura) / 2;
}

areaTriangulo = calcularAreaTriangulo (6, 4);

console.log (areaTriangulo);

// Actividad de repaso: Goles del campeon üèÜ‚öΩ // Escrib√≠ una funci√≥n en JavaScript que calcule la cantidad total de goles marcados por messi en el mundial y que almacene el resultado en una variable global. La funci√≥n debe tomar como par√°metros la cantidad de partidos jugados y el promedio de goles por partido. Luego, muestra el resultado almacenado en la variable global en la consola.

let cantidadTotalGoles;

function calcularCantidadTotalGoles (partidosJugados, golesPorPartido) {
    return partidosJugados * golesPorPartido;
}

cantidadTotalGoles = calcularCantidadTotalGoles (7,1);
console.log (cantidadTotalGoles);



// CLASE 4: Funciones

// HOJA 1

// Preguntas

// 1. ¬øQu√© es una funci√≥n y para qu√© se utiliza en programaci√≥n?
// Las funciones son como peque√±os frascos donde puedes guardar un bloque de c√≥digo para reutilizarlo en diferentes partes de tu programa. Esto te permite evitar duplicar c√≥digo y facilita el mantenimiento y la organizaci√≥n de tu aplicaci√≥n.


// 2. ¬øC√≥mo se almacena el valor de una variable desde una funci√≥n con return?
// Para almacenar el valor de una variable desde una funci√≥n con return, hacemos lo siguiente:
function nave (a, b) {
    return a + b; 
}

let sumar = nave (1,2);
console.log (sumar);

// 3. ¬øQu√© es el scope y cu√°l es la diferencia entre scope local y global?

// 4. ¬øQu√© sucede si declaramos una variable con el mismo nombre en el scope local y global?

// 5. ¬øQu√© es una funci√≥n an√≥nima y c√≥mo se declara?

// 6. ¬øCu√°l es la ventaja de utilizar funciones an√≥nimas en JavaScript?

// 7. Escribe un ejemplo de una funci√≥n an√≥nima que sume dos n√∫meros y almacene el resultado en una variable.

// 8. ¬øC√≥mo se puede reutilizar una funci√≥n en diferentes partes de un programa?

// 9. ¬øQu√© es el return en una funci√≥n y cu√°l es su prop√≥sito?
// 10. ¬øC√≥mo afecta el scope a la accesibilidad de las variables en un programa?




